# Generated by Django 5.0.6 on 2024-06-18 08:32

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Source",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "identifier",
                    models.CharField(
                        blank=True,
                        editable=False,
                        help_text="An identifier that is a hash of the slug, for internal use. It's created from the slug when the model is saved.",
                        max_length=16,
                        unique=True,
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        editable=False,
                        help_text="A slug representation of the name of the model. It's created from the name of the source when the model is saved.",
                        max_length=200,
                        unique=True,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the source. Must be unique.",
                        max_length=200,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Description of the source"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "identifier",
                    models.CharField(
                        blank=True,
                        editable=False,
                        help_text="An identifier that is a hash of the slug, for internal use. It's created from the slug when the model is saved.",
                        max_length=16,
                        unique=True,
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        editable=False,
                        help_text="A slug representation of the name of the model. It's created from the name of the source when the model is saved.",
                        max_length=200,
                        unique=True,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the author. It doesn't have to be a real name, but something that is useful to identify the author (e.g. a combination of the name and other things).",
                        max_length=200,
                        unique=True,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        help_text="The user associated with the author, if the author isn't anonymous",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Debate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "identifier",
                    models.CharField(
                        blank=True,
                        editable=False,
                        help_text="An identifier that is a hash of the slug, for internal use. It's created from the slug when the model is saved.",
                        max_length=16,
                        unique=True,
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        editable=False,
                        help_text="A slug representation of the name of the model. It's created from the name of the source when the model is saved.",
                        max_length=200,
                        unique=True,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The title of the debate. It should give a general idea what the debates is about. Must be unique.",
                        max_length=200,
                        unique=True,
                    ),
                ),
                (
                    "summary",
                    models.TextField(
                        blank=True,
                        help_text="A summary of the topic of the debate. It's useful if the title isn't expressive enough.",
                    ),
                ),
                (
                    "source",
                    models.ForeignKey(
                        blank=True,
                        help_text="A source for the debate, in case it has one.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="debates",
                        to="debate.source",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Statement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "statement",
                    models.TextField(help_text="The argumentative statement done."),
                ),
                (
                    "statement_type",
                    models.CharField(
                        choices=[
                            ("POS", "Position"),
                            ("SUP", "Supporting Argument"),
                            ("ATT", "Attacking Argument"),
                        ],
                        help_text="The type of statement being made.",
                        max_length=3,
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        help_text="The author of the statement",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="debate.author",
                    ),
                ),
                (
                    "debate",
                    models.ForeignKey(
                        help_text="The debate this statement is part of.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="debate.debate",
                    ),
                ),
                (
                    "related_to",
                    models.ForeignKey(
                        blank=True,
                        help_text="Another statement that this statement is related to. It only makes sense for statements of type SUPPORTING_ARGUMENT or ATTACKING_ARGUMENT. ",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="related_statements",
                        to="debate.statement",
                    ),
                ),
            ],
        ),
    ]
